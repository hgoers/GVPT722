---
title: "Working with Panel Data"
subtitle: "GVPT722"
format: 
  revealjs:
    slide-number: true
    preview-links: auto
    theme: solarized
    embed-resources: true
execute: 
  message: false
  warning: false
  echo: false
---

```{r}
library(tidyverse)
library(wbstats)
library(countrycode)
library(modelsummary)
library(ggh4x)
library(lme4)
library(broom)
library(broom.mixed)
library(ggdist)
library(marginaleffects)
library(ggtext)
library(patchwork)

set.seed(333)
```

```{r}
gdp_df <- wb_data("NY.GDP.PCAP.CD", start_date = 2000, end_date = 2020, return_wide = F) |> 
  transmute(iso3c, country, year = date, gdp_per_cap = value, log_gdp = log(gdp_per_cap))

life_exp_df <- wb_data("SP.DYN.LE00.IN", start_date = 2000, end_date = 2020, return_wide = F) |> 
  select(iso3c, country, year = date, life_exp = value)

full_df <- gdp_df |> 
  left_join(life_exp_df, by = join_by(iso3c, country, year)) |> 
  mutate(region = countrycode(country, "country.name", "region"),
         year = year - 2000, 
         region = factor(region, ordered = T, levels = c("East Asia & Pacific", 
                                                         "Europe & Central Asia", 
                                                         "Latin America & Caribbean", 
                                                         "Middle East & North Africa", 
                                                         "South Asia", 
                                                         "Sub-Saharan Africa",
                                                         "North America"))) |> 
  relocate(region, .after = country)
```

```{r}
countries <- full_df |> 
  group_by(region) |> 
  sample_n(2) |> 
  filter(region %in% c("Middle East & North Africa",
                       "North America",
                       "Sub-Saharan Africa",
                       "East Asia & Pacific")) |> 
  pull(country)
```

## Today's class

1.  What are panel data?
2.  Introduce intuition behind panel data
3.  Introduce random effects
4.  Worked example of fitting and interpreting a multi-level model

## Looking at the same observations over time

-   Countries' voting behavior in the UN in the post-Cold War period;

-   Countries' propensity to go to war with one another;

-   Democratic backsliding across regions or countries;

-   A politician's voting behavior;

-   An individual's turnout behavior over all elections in which they are eligible to vote.

## Looking at the same observations over time

More generally...

-   Actor 1's behaviour in time $t$, $t+1$, ..., $t + n$;

-   Actor 2's behaviour in time $t$, $t+1$, ..., $t + n$;

-   Actor N's behaviour in time $t$, $t+1$, ..., $t + n$.

## Relationship between health and wealth

What is the relationship between people's health and wealth? 

## Countries over time

```{r}
full_df |> 
  arrange(desc(country), year)
```

## Relationship between health and wealth

```{r}
ggplot(full_df, aes(x = (year + 2000), y = life_exp, group = country)) + 
  geom_line(alpha = 0.25) + 
  theme_minimal() + 
  theme(panel.grid = element_blank(),
        plot.title.position = "plot",
        plot.title = element_text(face = "bold")) + 
  labs(x = "Year",
       y = "Average Life Expectancy (in years)",
       title = "The average life expectancy across all countries globally, 2000-2020",
       caption = "Source: World Bank (2023)")
```

## Relationship between health and wealth

```{r}
full_df |>
  group_by(year) |> 
  summarise(life_exp = mean(life_exp, na.rm = T)) |> 
  ggplot(aes(x = (year + 2000), y = life_exp)) + 
  geom_line() + 
  theme_minimal() + 
  theme(panel.grid = element_blank(),
        plot.title.position = "plot",
        plot.title = element_text(face = "bold")) + 
  labs(x = "Year",
       y = "Average Life Expectancy (in years)",
       title = "The global average life expectancy, 2000-2020",
       caption = "Source: World Bank (2023)")
```

## Modelling life expectancy over time

$$
Average\ life\ expectancy = \beta_0 + \beta_1Year + \epsilon
$$

```{r}
m <- lm(life_exp ~ year, data = full_df)

modelsummary(m, coef_rename = c(year = "Year"), stars = T, gof_map = "nobs")
```

## Modelling life expectancy over time

```{r}
augment(m, newdata = tibble(year = 0:20)) |> 
  left_join(
    full_df |> 
      group_by(year) |> 
      summarise(avg_life_exp = mean(life_exp, na.rm = T))
  ) |>
  ggplot(aes(x = (year + 2000))) + 
  geom_line(aes(y = .fitted), colour = "#735CDD") +
  geom_line(aes(y = avg_life_exp), colour = "#B3C2F2") + 
  theme_minimal() + 
  theme(panel.grid = element_blank(),
        plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average Life Expectancy (in years)",
       title = "<span style='color:#735CDD'>Predicted</span> and <span style='color:#B3C2F2'>observed</span> global average life expectancy, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

## Accounting for the structure of our data

```{r}
augment(m, newdata = full_df) |> 
  filter(country %in% countries) |> 
  ggplot(aes(x = year + 2000)) + 
  geom_point(aes(y = life_exp), colour = "#B3C2F2") + 
  geom_line(aes(y = .fitted), colour = "#735CDD") + 
  facet_nested_wrap(~ region + country, ncol = 4) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average life expectancy (years)",
       title = "<span style='color:#735CDD'>Predicted</span> and <span style='color:#B3C2F2'>observed</span> average life expectancy, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

## Region-level intercepts

$$
Average\ life\ expectancy = \beta_0 + \beta_1Year + \beta_2Region + \epsilon
$$

```{r}
m_region <- lm(life_exp ~ year + region, data = mutate(full_df, region = as.character(region)))

modelplot(m_region, coef_rename = c(year = "Year")) + 
  geom_vline(xintercept = 0, colour = "darkgrey")
```

## Region-level intercepts

```{r}
augment(m_region, newdata = full_df) |> 
  filter(country %in% countries) |> 
  ggplot(aes(x = year + 2000)) + 
  geom_point(aes(y = life_exp), colour = "#B3C2F2") + 
  geom_line(aes(y = .fitted), colour = "#735CDD") + 
  facet_nested_wrap(~ region + country, ncol = 4) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average life expectancy (years)",
       title = "<span style='color:#735CDD'>Predicted</span> and <span style='color:#B3C2F2'>observed</span> average life expectancy, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

## Country-level intercepts

$$
Average\ life\ expectancy = \beta_0 + \beta_1Year + \beta_1Country + \epsilon
$$

```{r}
m_country <- lm(life_exp ~ year + country, data = full_df)
```

## Country-level intercepts

```{r}
augment(m_country) |> 
  filter(country %in% countries) |> 
  left_join(
    distinct(full_df, country, region)
  ) |> 
  ggplot(aes(x = year + 2000)) + 
  geom_point(aes(y = life_exp), colour = "#B3C2F2") + 
  geom_line(aes(y = .fitted), colour = "#735CDD") + 
  facet_nested_wrap(~ region + country, ncol = 4) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average life expectancy (years)",
       title = "<span style='color:#735CDD'>Predicted</span> and <span style='color:#B3C2F2'>observed</span> average life expectancy, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

## Random effects: a brief introduction

$$
Average\ life\ expectancy = \beta_0 + \beta_1Year + \epsilon
$$

Where:

$$
\epsilon \sim \mathcal{N}(0,\sigma)
$$

This error captures all variance that is not explained by our IV: annual growth in average life expancies. 

## Focusing on that error

```{r}
error_m <- tibble(residual = rnorm(1e6, mean = 0, sd = glance(m)$sigma))

ggplot(error_m, aes(x = residual)) + 
  stat_halfeye() + 
  theme_minimal() + 
  theme(plot.title.position = "plot", 
        plot.title = element_text(face = "bold")) + 
  labs(x = "Residual",
       y = NULL,
       title = "The distribution of possible residuals for our linear regression model")
```

::: {.aside}
The standard deviation of the error term for our model is `r glance(m) |> pull(sigma) |> round(1)`. 
:::

## Country-specific starting points

```{r}
full_df |> 
  filter(year == 0) |> 
  ggplot(aes(x = life_exp)) + 
  stat_halfeye() + 
  theme_minimal() + 
  theme(plot.title.position = "plot", 
        plot.title = element_text(face = "bold")) + 
  labs(x = "Average life expectancy (years)",
       y = NULL,
       title = "Distribution of all countries' average life expectancy in 2000")
```

## Your error is too full

$$
Average\ life\ expectancy = \beta_0 + \beta_1 Year + (b_{country} + \epsilon)
$$

For example: 

$$
Average\ life\ expectancy_{Australia} = \beta_0 + \beta_1 Year + (b_{Australia} + \epsilon)
$$

## Australia-specific error

```{r}

augment(m, newdata = tibble(year = 0:20)) |> 
  left_join(
    full_df |> 
      filter(country == "Australia") |>
      select(year, life_exp)
  ) |> 
  ggplot(aes(x = year + 2000)) + 
  geom_line(aes(y = .fitted), colour = "#735CDD") + 
  geom_point(aes(y = life_exp), colour = "#B3C2F2") + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average life expectancy (years)",
       title = "Australia's <span style='color:#735CDD'>predicted</span> and <span style='color:#B3C2F2'>observed</span> average life expectancy, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

::: {.aside}
Some of the distance between the predicted values and observed values are due to universal random error and some is due to Australia-specific random error. 
:::

## Country-specific error

$$
Average\ life\ expectancy = \beta_0 + \beta_1 Year + (b_{country} + \epsilon)
$$

Where:

$$
b_{country} \sim \mathcal{N}(0,\tau)
$$

::: {.aside}
$\tau$ is the Greek letter tau.
:::

## What can we do with this new power? 

1.    Give each country its own starting point (intercept);

2.    Give each country its own slope;

3.    Given each country its starting point *and*  slope.

Cool!

## Country-specific starting point

$$
Average\ life\ expectancy = \beta_0 + b_{0,country} + \beta_1 Year + \epsilon
$$

## Country-specific starting point

```{r}
m_multi <- lme4::lmer(life_exp ~ year + (1 | country), data = full_df)

augment(m_multi) |> 
  filter(country %in% countries) |> 
  left_join(
    distinct(full_df, country, region)
  ) |> 
  ggplot(aes(x = year + 2000)) + 
  geom_point(aes(y = life_exp), colour = "#B3C2F2") + 
  geom_line(aes(y = .fitted), colour = "#735CDD") + 
  facet_nested_wrap(~ region + country, ncol = 4) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average life expectancy (years)",
       title = "<span style='color:#735CDD'>Predicted</span> and <span style='color:#B3C2F2'>observed</span> average life expectancy, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

## Country-specific starting point

```{r}
error_m <- tibble(residual = rnorm(1e6, mean = 0, sd = tidy(m_multi) |> filter(term == "sd__(Intercept)") |> pull(estimate)))

ggplot(error_m, aes(x = residual)) + 
  stat_halfeye() + 
  theme_minimal() + 
  theme(plot.title.position = "plot", 
        plot.title = element_text(face = "bold")) + 
  labs(x = "Country-specific residual",
       y = NULL,
       title = "Distribution of differences in average life expectancies in 2000")
```

## Country-specific slope

$$
Average\ life\ expectancy = \beta_0 + \beta_1 Year + b_{1,country} + \epsilon
$$

## Country-specific slope

```{r}
m_multi <- lme4::lmer(life_exp ~ year + (year | country), data = full_df)

augment(m_multi) |> 
  filter(country %in% countries) |> 
  left_join(
    distinct(full_df, country, region)
  ) |> 
  ggplot(aes(x = year + 2000)) + 
  geom_point(aes(y = life_exp), colour = "#B3C2F2") + 
  geom_line(aes(y = .fitted), colour = "#735CDD") + 
  facet_nested_wrap(~ region + country, ncol = 4) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average life expectancy (years)",
       title = "<span style='color:#735CDD'>Predicted</span> and <span style='color:#B3C2F2'>observed</span> average life expectancy, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

## Country-specific slope

```{r}
error_m <- tibble(residual = rnorm(1e6, mean = 0, sd = tidy(m_multi) |> filter(term == "sd__year") |> pull(estimate)))

ggplot(error_m, aes(x = residual)) + 
  stat_halfeye() + 
  theme_minimal() + 
  theme(plot.title.position = "plot", 
        plot.title = element_text(face = "bold")) + 
  labs(x = "Country-specific residual",
       y = NULL,
       title = "Distribution of differences between countries' annual growth in average life expectancy")
```

## Country-specific starting point and slope

$$
Average\ life\ expectancy = \beta_0 + b_{0,country} + \beta_1 Year + b_{1,country} + \epsilon
$$

## Country-specific starting point and slope

```{r}
m_multi <- lme4::lmer(life_exp ~ year + (1 + year | country), data = full_df)

augment(m_multi) |> 
  filter(country %in% countries) |> 
  left_join(
    distinct(full_df, country, region)
  ) |> 
  ggplot(aes(x = year + 2000)) + 
  geom_point(aes(y = life_exp), colour = "#B3C2F2") + 
  geom_line(aes(y = .fitted), colour = "#735CDD") + 
  facet_nested_wrap(~ region + country, ncol = 4) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average life expectancy (years)",
       title = "<span style='color:#735CDD'>Predicted</span> and <span style='color:#B3C2F2'>observed</span> average life expectancy, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

## Country-specific starting point and slope

```{r}
error_m <- tibble(residual = rnorm(1e6, mean = 0, sd = tidy(m_multi) |> filter(term == "sd__(Intercept)") |> pull(estimate)))

p1 <- ggplot(error_m, aes(x = residual)) + 
  stat_halfeye() + 
  theme_minimal() + 
  theme(plot.title.position = "plot", 
        plot.title = element_text(face = "bold")) + 
  labs(x = "Country-specific residual",
       y = NULL,
       title = "Distribution of differences in average life expectancies\nin 2000")

error_m <- tibble(residual = rnorm(1e6, mean = 0, sd = tidy(m_multi) |> filter(term == "sd__year") |> pull(estimate)))

p2 <- ggplot(error_m, aes(x = residual)) + 
  stat_halfeye() + 
  theme_minimal() + 
  theme(plot.title.position = "plot", 
        plot.title = element_text(face = "bold")) + 
  labs(x = "Country-specific residual",
       y = NULL,
       title = "Distribution of differences between countries' annual\ngrowth in average life expectancy")

p1 | p2
```

## Why not just include a country variable?

This approach is good at capturing that different starting point, but falls down in capturing the uncertainty around those starting points.

-   Over-contextualized;

-   Making inferences based on very little information.

## Multi-level modelling

Focusing on country-specific starting points: 

$$
Average\ life\ expectancy = \beta_0 + b_{0,country} + \beta_1 Year + \epsilon
$$

In R: 

```{r}
#| echo: true

m_multi <- lme4::lmer(life_exp ~ year + (1 | country), data = full_df)
```

## Life expectancy over time

```{r}
modelsummary(list("Simple" = m, "Multi-level" = m_multi), coef_rename = c(year = "Year"), gof_map = "nobs")
```

## Fixed effects

The **fixed effects** describe the overall relationship within our data.

```{r}
#| echo: true

tidy(m_multi, effects = "fixed")
```

::: {.aside}
These can be interpreted exactly as we would any other linear regression coefficients.
:::

## Group-level effects

The **group-level effects** tell us how this relationship differs between groups in our data (here: countries).

```{r}
#| echo: true

tidy(m_multi, effects = "ran_pars")
```

## Group-level effects

As we move from country to country, how much does the average life expectancy change on average?

```{r}
tidy(m_multi, effects = "ran_pars") |> 
  filter(group == "country")
```

What is the remaining universal/global variance unexplained by our IV?

```{r}
tidy(m_multi, effects = "ran_pars") |> 
  filter(group == "Residual")
```

## Substantive interpretation

The between country variance makes up a large proportion of our total variance:

$$
\frac{SD\ (Intercept\ country)}{Total\ SD} = 85.1%
$$

This variance is also much larger than the estimated effect of our IV (`r tidy(m_multi) |> filter(term == "year") |> pull(estimate) |> round(2)` years): which country you are in matters much more than which year you are in. 

## Model performance

```{r}
augment(m_multi) |> 
  filter(country %in% countries) |> 
  left_join(
    distinct(full_df, country, region)
  ) |> 
  ggplot(aes(x = year + 2000)) + 
  geom_point(aes(y = life_exp), colour = "#B3C2F2") + 
  geom_line(aes(y = .fitted), colour = "#735CDD") + 
  facet_nested_wrap(~ region + country, ncol = 4) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average life expectancy (years)",
       title = "<span style='color:#735CDD'>Predicted</span> and <span style='color:#B3C2F2'>observed</span> average life expectancy, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

## Relationship between health and wealth

```{r}
ggplot(full_df, aes(x = gdp_per_cap, y = life_exp)) + 
  geom_point() + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) +   
  labs(x = "GDP per capita (USD)",
       y = "Average life expectancy (years)",
       title = "Relationship between a country's average life expectancy and GDP per capita, 2000-2020",
       caption = "Source: World Bank (2023)") + 
  scale_x_continuous(labels = scales::dollar)
```

::: {.aside}
Not very linear!
:::

## Log transformation

```{r}
ggplot(full_df, aes(x = log_gdp, y = life_exp)) + 
  geom_point() + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) +   
  labs(x = "GDP per capita (USD, logged)",
       y = "Average life expectancy (years)",
       title = "Relationship between a country's average life expectancy and logged GDP per capita, 2000-2020",
       caption = "Source: World Bank (2023)") + 
  scale_x_continuous(labels = scales::dollar)
```

## Relationship between health and wealth over time

```{r}
ggplot(full_df, aes(x = log_gdp, y = life_exp, group = country)) + 
  geom_point(alpha = 0.25) + 
  geom_line(alpha = 0.25) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) +   
  labs(x = "GDP per capita (USD, logged)",
       y = "Average life expectancy (years)",
       title = "Relationship between a country's average life expectancy and logged GDP per capita, 2000-2020",
       caption = "Source: World Bank (2023)") + 
  scale_x_continuous(labels = scales::dollar)
```

## Relationship between health and wealth over time

```{r}
full_df |> 
  filter(country %in% countries) |> 
  ggplot(aes(x = log_gdp, y = life_exp)) + 
  geom_line() + 
  geom_point() + 
  facet_nested_wrap(~ region + country, ncol = 4) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) +   
  labs(x = "GDP per capita (USD, logged)",
       y = "Average life expectancy (years)",
       title = "Relationship between a country's average life expectancy and logged GDP per capita, 2000-2020",
       caption = "Source: World Bank (2023)") + 
  scale_x_continuous(labels = scales::dollar)
```

## Linear regression

$$
Average\ life\ expectancy = \beta_0 + \beta_1GDP\ per\ capita + \beta_2Year + \epsilon
$$

## Linear regression

```{r}
m_linear <- lm(life_exp ~ log_gdp + year, data = full_df)

modelsummary(m_linear, 
             coef_rename = c(log_gdp = "GDP per capita (US$, logged)", 
                             year = "Year"),
             gof_map = "nobs")
```

## Model performance

```{r}
augment(m_linear) |> 
  select(.rownames, life_exp, log_gdp, year, .fitted_linear = .fitted) |> 
  left_join(
    full_df |> 
      select(country, region, year) |> 
      rownames_to_column(var = ".rownames")
  ) |> 
  filter(country %in% countries) |> 
  ggplot(aes(x = year + 2000)) + 
  geom_point(aes(y = life_exp), colour = "#B3C2F2") + 
  geom_line(aes(y = .fitted_linear), colour = "#BB0A21") + 
  facet_nested_wrap(~ region + country, ncol = 4) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average life expectancy (years)",
       title = "<span style='color:#BB0A21'>Predicted</span> and <span style='color:#B3C2F2'>observed</span> average life expectancy, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

## Accounting for country-specific variance

```{r}
m_multi <- lmer(life_exp ~ log_gdp + year + (1 | country), 
                data = full_df)

modelsummary(m_multi, 
             coef_rename = c(log_gdp = "GDP per capita (US$, logged)", 
                             year = "Year"),
             gof_map = "none")
```

## Model performance

```{r}
augment(m_multi) |> 
  select(.rownames, life_exp, log_gdp, year, .fitted_multi = .fitted) |> 
  left_join(
    full_df |> 
      select(country, region, year) |> 
      rownames_to_column(var = ".rownames")
  ) |> 
  filter(country %in% countries) |> 
  ggplot(aes(x = year + 2000)) + 
  geom_point(aes(y = life_exp), colour = "#B3C2F2") + 
  geom_line(aes(y = .fitted_multi), colour = "#735CDD") + 
  facet_nested_wrap(~ region + country, ncol = 4) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average life expectancy (years)",
       title = "<span style='color:#735CDD'>Predicted</span> and <span style='color:#B3C2F2'>observed</span> average life expectancy, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

## What did we gain?

A lot of the unexplained variance in the simple linear regression model is explained by country-specific differences:

$$
\frac{SD\ (Intercept\ country)}{Total\ SD} = \frac{6.945\ years}{6.945\ years + 1.459\ years} = 0.82
$$

## Model performance across time

```{r}
augment(m_linear) |> 
  select(.rownames, life_exp, log_gdp, year, .fitted_linear = .fitted) |> 
  left_join(
    augment(m_multi) |>
      select(.rownames, life_exp, log_gdp, year, .fitted_multi = .fitted)
  ) |> 
  left_join(
    full_df |> 
      select(country, region, year) |> 
      rownames_to_column(var = ".rownames")
  ) |> 
  filter(country %in% countries) |> 
  ggplot(aes(x = year + 2000)) + 
  geom_point(aes(y = life_exp), colour = "#B3C2F2") + 
  geom_line(aes(y = .fitted_multi), colour = "#735CDD") + 
  geom_line(aes(y = .fitted_linear), colour = "#BB0A21") + 
  facet_nested_wrap(~ region + country, ncol = 4) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average life expectancy (years)",
       title = "Predicted (<span style='color:#735CDD'>multi-level</span> and <span style='color:#BB0A21'>simple linear</span>) and <span style='color:#B3C2F2'>observed</span> average life expectancy across time, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

## Model performance across GDP per capita

```{r}
augment(m_linear) |> 
  select(.rownames, life_exp, log_gdp, year, .fitted_linear = .fitted) |> 
  left_join(
    augment(m_multi) |>
      select(.rownames, life_exp, log_gdp, year, .fitted_multi = .fitted)
  ) |> 
  left_join(
    full_df |> 
      select(country, region, year) |> 
      rownames_to_column(var = ".rownames")
  ) |> 
  filter(country %in% countries) |> 
  ggplot(aes(x = log_gdp)) + 
  geom_point(aes(y = life_exp), colour = "#B3C2F2") + 
  geom_line(aes(y = .fitted_multi), colour = "#735CDD") + 
  geom_line(aes(y = .fitted_linear), colour = "#BB0A21") + 
  facet_nested_wrap(~ region + country, ncol = 4) + 
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_markdown(face = "bold")) + 
  labs(x = "Year",
       y = "Average life expectancy (years)",
       title = "Predicted (<span style='color:#735CDD'>multi-level</span> and <span style='color:#BB0A21'>simple linear</span>) and <span style='color:#B3C2F2'>observed</span> average life expectancy across time, 2000-2020",
       caption = "Source: World Bank (2023), author's own modelling")
```

## Summary

Today you learnt how to: 

-   Account for the structure of your data;

-   Isolate fixed- and group-effects in the relationship between your outcome and explanatory variables.

